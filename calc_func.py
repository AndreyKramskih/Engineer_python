# Определение потерь давления при заданных Kv и Q
def dp_Kv(Kv, dens, Q, hour=True):
    # Входные параметры:
    # Kv, м3/ч
    # Плотность среды, кг/м3
    # Расход среды, м3/ч или м3/с
    # hour = True для Q в м3/ч (по умолчанию), False для Q в м3/с

    if not hour:
        Q *= 3600  # перевод в м3/ч
    # Возвращает значение потерь давления, Па
    return 100 * dens * (Q / Kv) ** 2


# Определение объёмного расхода при заданных Kv и dp
from math import sqrt


def Q_Kv(Kv, dens, dp, hour=True):
    # Входные параметры:
    # Kv, м3/ч
    # Плотность среды, кг/м3
    # Потери давления, Па
    # hour = True для Q в м3/ч (по умолчанию), False для Q в м3/с

    # Возвращает значение объёмного расхода
    Q = Kv * sqrt(dp / 100 / dens)  # м3/ч
    if not hour:
        Q /= 3600  # м3/с
    return Q


# Вычисление пропускной способности
def calc_Kv(dens, Q, dp, hour=True):
    # Входные параметры:
    # Плотность среды, кг/м3
    # Расход среды, м3/ч или м3/с
    # Потери давления, Па
    # hour = True для Q в м3/ч (по умолчанию), False для Q в м3/с

    if not hour:
        Q *= 3600  # перевод в м3/ч
    # Возвращает значение пропускной способности, м3/ч
    return Q * sqrt(100 * dens / dp)

print(dp_Kv(100,998,50))
print(Q_Kv(100, 998, 24950))
print(calc_Kv(998, 50, 24950))